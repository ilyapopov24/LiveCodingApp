name: Android Debug Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch: # Позволяет запускать вручную

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle
      run: |
        ./gradlew --version
        ./gradlew clean
        
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Debug AAB
      run: ./gradlew bundleDebug
      
    # Тесты отключены для ускорения сборки
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Debug AAB
      uses: actions/upload-artifact@v4
      with:
        name: debug-aab
        path: app/build/outputs/bundle/debug/app-debug.aab
        
    - name: Upload Build Reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports
        path: |
          app/build/reports/
          app/build/outputs/
          
    - name: Build Summary
      run: |
        echo "=== BUILD SUMMARY ==="
        echo "Debug APK size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
        echo "Debug AAB size: $(du -h app/build/outputs/bundle/debug/app-debug.aab | cut -f1)"
        echo "Build completed successfully!"
        
  # Quality check отключен для ускорения сборки
