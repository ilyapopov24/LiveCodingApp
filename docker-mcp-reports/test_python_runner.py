#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Python Runner MCP —Å–µ—Ä–≤–µ—Ä–∞
"""

import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from python_runner_keepalive import PythonRunnerKeepaliveServer

def test_python_runner():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Python Runner MCP —Å–µ—Ä–≤–µ—Ä"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Python Runner MCP —Å–µ—Ä–≤–µ—Ä...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    server = PythonRunnerKeepaliveServer()
    
    # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:")
    init_request = {
        "jsonrpc": "2.0",
        "id": 1,
        "method": "initialize",
        "params": {
            "protocolVersion": "2024-11-05",
            "capabilities": {},
            "clientInfo": {
                "name": "test",
                "version": "1.0.0"
            }
        }
    }
    
    init_response = server.handle_request(init_request)
    print(f"–ó–∞–ø—Ä–æ—Å: {json.dumps(init_request, ensure_ascii=False)}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(init_response, ensure_ascii=False)}")
    
    # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ —Ç—É–ª—Å–æ–≤
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ —Ç—É–ª—Å–æ–≤:")
    tools_request = {
        "jsonrpc": "2.0",
        "id": 2,
        "method": "tools/list"
    }
    
    tools_response = server.handle_request(tools_request)
    print(f"–ó–∞–ø—Ä–æ—Å: {json.dumps(tools_request, ensure_ascii=False)}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(tools_response, ensure_ascii=False)}")
    
    # –¢–µ—Å—Ç 3: –í—ã–∑–æ–≤ —Ç—É–ª—Å–∞
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –≤—ã–∑–æ–≤–∞ —Ç—É–ª—Å–∞:")
    call_request = {
        "jsonrpc": "2.0",
        "id": 3,
        "method": "tools/call",
        "params": {
            "name": "run-python-code",
            "arguments": {
                "code": "print('Hello, World!')"
            }
        }
    }
    
    call_response = server.handle_request(call_request)
    print(f"–ó–∞–ø—Ä–æ—Å: {json.dumps(call_request, ensure_ascii=False)}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(call_response, ensure_ascii=False)}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_python_runner()


